//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRMS.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class HRMS_Travel_Expense_App
    {
        public long ID { get; set; }
        public long Travel_App_ID { get; set; }
        
        
        [Display(Name = "Travel Date")]

        public System.DateTime Travel_Date { get; set; }

        public string Journey_Mode { get; set; }
        
        [Display(Name = "From Place")]
        //[RegularExpression(@"^[A-Za-z]+", ErrorMessage = "Only Alphabetic values are allowed!")]
        //[DataType(DataType.Text, ErrorMessage = "Only Alphabetic value are allowed")]
        //[MaxLength(50, ErrorMessage = "From Place can have 50 characters maximum!")]
        public string From_Place { get; set; }
        
        [Display(Name = "From Place")]
        //[RegularExpression(@"^[A-Za-z]+", ErrorMessage = "Only Alphabetic values are allowed!")]
        //[DataType(DataType.Text, ErrorMessage = "Only Alphabetic value are allowed")]
        //[MaxLength(50, ErrorMessage = "From Place can have 50 characters maximum!")]
        public string To_Place { get; set; }
        [Display(Name = "Distance")]
        //[RegularExpression("^[0-9]*$", ErrorMessage = "Distance must be in valid format")]
        public Nullable<decimal> Distance { get; set; }
        [Display(Name = "Amount")]
        //[RegularExpression("^[0-9]*$", ErrorMessage = "Amount must be in valid format")]
        public decimal Amount { get; set; }
        
        [Display(Name = "Purpose")]
        //[RegularExpression(@"^[A-Za-z_ ]*$", ErrorMessage = "Only Alphabetic values are allowed!")]
        //[DataType(DataType.Text, ErrorMessage = "Only Alphabetic value are allowed")]
        //[MaxLength(200, ErrorMessage = "Purpose can have 200 characters maximum!")]
        public string Purpose { get; set; }
        public string FileName { get; set; }
        public string FileUrl { get; set; }
        public long EMP_ID { get; set; }
        public Nullable<int> Status { get; set; }

        public decimal TotalAmount { set; get; }
    
        public virtual HRMS_Travel_Application HRMS_Travel_Application { get; set; }
        public virtual Accounts Accounts { get; set; }
    }
}
