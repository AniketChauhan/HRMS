@model HRMS.Models.Accounts
@using CaptchaMvc.HtmlHelpers
@*@using MathCaptcha;
    @using CaptchaMvc;*@


@{

    ViewBag.Title = "Index";
}
@{ string color = string.Empty;
    HttpCookie httpCookie = Request.Cookies["Bgcolor"];
    if (httpCookie != null)
    {
        color = httpCookie["Color"].ToString();
    }
}
<head>
    <link href="~/StyleSheet/UnitStyleSheet.css" rel="stylesheet" />
</head>

@*<h2>Index</h2>*@

<div class="container  w3-card-4" style="" id="LoginDiv">
    @using (Html.BeginForm("Index", "Account", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "formCaptcha" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="@color " id="loginHeader">
                <center><h3><i class="glyphicon glyphicon-user">&ensp;</i>Login</h3></center>
            </div>
               <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div style="    " id="InDiv">
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2 required" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ">
                    <div class="col-md-2"></div>
                    <div class="col-md-10">
                        @*@Html.MathCaptcha()*@

                        @Html.Captcha("Try Another", "Enter Text", 4, "Is Required Filed", true)
                        <p class="text-danger">@ViewBag.Error</p>
                    </div>
                </div>


                @*<div class="form-group">
                        @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <button type="submit" class="btn btn-primary "><i class="glyphicon glyphicon-log-in"> </i> Login</button>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (ViewBag.AccountStatus != null)
    {
        <div class="alert alert-danger alert-dismissible " style="width:50%;margin-left: 25%;">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <span>
                @ViewBag.AccountStatus

            </span>

        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
