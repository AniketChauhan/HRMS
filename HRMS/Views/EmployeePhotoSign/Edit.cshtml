@model HRMS.Models.HRMS_EMP_PHOTO_SIGN

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit","EmployeePhotoSign", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>HRMS_EMP_PHOTO_SIGN</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Emp_Photos_ID)

    @if (ViewBag.Role == "admin")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Emp_ID, "Emp_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_ID, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.Emp_ID, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @*<div class="form-group">
            @Html.LabelFor(model => model.Emp_Photo_Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Photo_Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Emp_Photo_Title, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Emp_Photo_Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Photo_Path, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Emp_Photo_Path, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_Sign_Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Sign_Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Emp_Sign_Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Emp_Sign_Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Emp_Sign_Path, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Emp_Sign_Path, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Emp_Photo_Path, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            <input type="file" name="ImageFile">
            @Html.EditorFor(model => model.Emp_Photo_Path, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
            @Html.ValidationMessageFor(model => model.Emp_Photo_Path, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Emp_Sign_Path, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="SignFile">
            @Html.EditorFor(model => model.Emp_Sign_Path, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
            @Html.ValidationMessageFor(model => model.Emp_Sign_Path, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
@if (ViewBag.Role == "admin")
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
