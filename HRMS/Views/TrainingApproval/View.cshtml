@model HRMS.Models.HRMS_TrainingApproval

@{
    ViewBag.Title = "View";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>View</title>
</head>
<body>
    <h3>View Program</h3>

    @if (User.IsInRole("emp"))
    {
    <marquee scrollamount="13" behavior="alternate" style="color:red; font-size:larger; background-color:lavender " direction="left">@ViewBag.msg</marquee>
    }

    @using (Html.BeginForm("Vieww", "TrainingApproval", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal row">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EMP_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EMP_ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.EMP_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("Designation", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmpDept, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("EmpDept", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.EmpDept, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <hr />

        <div class="form-horizontal row">
            <div class="col-md-6">

                <div class="form-group">

                    @Html.LabelFor(model => model.Program_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("Program_ID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Program_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("FromDate", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("xyz", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.Editor("fromdate", new { htmlAttributes = new { @class = "form-control", @value = "ViewBag.fromdate", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("ToDate", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("xyz", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.Editor("todate", new { htmlAttributes = new { @class = "form-control", @value = "ViewBag.todate", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("NoOfDays", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("xyz", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.Editor("NoOfDays", new { htmlAttributes = new { @class = "form-control", @value = "ViewBag.NoOfDays", @readonly = "readonly" } })

                    </div>
                </div>


            </div>

            <div class="col-md-6">



                <div class="form-group">
                    @Html.Label("FromTime", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("xyz", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.Editor("fromtime", new { htmlAttributes = new { @class = "form-control", @value = "ViewBag.fromtime", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("ToTime", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("xyz", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.Editor("totime", new { htmlAttributes = new { @class = "form-control", @value = "ViewBag.totime", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Remarks", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @*@Html.DropDownList("xyz", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextArea("remarks", new { @value = "ViewBag.remarks", @readonly = "readonly" })

                    </div>
                </div>



            </div>

        </div>

        if (User.IsInRole("admin"))
        {

            <hr />

            <div class="form-horizontal row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ApproveBy, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ApproveBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ApproveBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ApproveDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ApproveDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ApproveDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        }
        <br />

        if (ViewBag.exist != "Exist")
        {
            <div class="form-group">
                <center>
                    <input type="submit" value="Request For Enroll" class="btn btn-primary" />

                </center>
            </div>
        }
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
