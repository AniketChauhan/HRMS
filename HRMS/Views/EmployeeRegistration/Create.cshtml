@model HRMS.Models.Accounts

@{
    ViewBag.Title = "Create";
}
<head>
    <link href="~/StyleSheet/UnitStyleSheet.css" rel="stylesheet" />
</head>

@{ string color = string.Empty;
    HttpCookie httpCookie = Request.Cookies["Bgcolor"];
    if (httpCookie != null)
    {
        color = httpCookie["Color"].ToString();
    }
}

<div class="container  w3-card-4" style="" id="LoginDiv">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="@color " id="loginHeader">
            <center><h4><i class="glyphicon glyphicon-user">&ensp; </i> Employee Registration</h4></center>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div style="margin-left: 20%;" >
            <div class="form-group">
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmUsername, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.ConfirmUsername, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmUsername, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-3 required" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-4 col-md-8 w3-padding">

                    @*<input type="submit" value="Create" class="btn btn-primary " />*@
                    <button type="submit" class="btn btn-primary "><i class="glyphicon glyphicon-log-in"> </i> Registration</button>
                </div>
            </div>
        </div>
    </div>
    }
</div>

@if (ViewBag.AccountStatus != null)
{
    <div class="alert alert-danger alert-dismissible " style="width:50%;">
       
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <span>
               
                    @ViewBag.AccountStatus
              

            </span>
        
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
