@model HRMS.Models.HRMS_Faculty_MS

@{
    ViewBag.Title = "Create";
    //Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    <link href="~/StyleSheet/UnitStyleSheet.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>HRMS_Faculty_MS</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FacultyType, htmlAttributes: new { @class = "control-label col-md-2 required" })
                @*<div class="col-md-10">
                        @Html.EditorFor(model => model.FacultyType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacultyType, "", new { @class = "text-danger" })
                    </div>*@
                <div class="radio-inline">
                    @Html.RadioButtonFor(model => model.FacultyType, "Internal", new { @name = "Faculty" })
                    Internal
                </div>

                <div class="radio-inline">
                    @Html.RadioButtonFor(model => model.FacultyType, "External", new { @name = "Faculty" })
                    External
                </div>
            </div>

            <div class="form-group Emp" style="display:none">
                @Html.LabelFor(model => model.EMP_ID, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10 form-inline">
                    @Html.EditorFor(model => model.EMP_ID, new { htmlAttributes = new { @class = "form-control", @id = "Employee" } })
                    <input type="text" id="Search" name="Search" class="form-control" placeholder="Search Here" />
                    @Html.ValidationMessageFor(model => model.EMP_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group Ext" style="display:none">
                @Html.LabelFor(model => model.External_Name, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.External_Name, new { htmlAttributes = new { @class = "form-control", @id = "Here" } })
                    @Html.ValidationMessageFor(model => model.External_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PAN_No, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PAN_No, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PAN_No, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ServiceTaxNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ServiceTaxNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServiceTaxNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @id = "Contact" } })
                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Empty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Empty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Empty, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">


                    <input type="submit" value="Create" class="btn btn-primary" /><i> &emsp;</i>
                    <input type="reset" value="Cancel" class="btn btn-danger" />
                </div>
            </div>
        </div>
    }

    @if (ViewBag.error != null)
    {
        <div class="alert alert-danger alert-dismissible " style="width:50%;">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <span>
                @ViewBag.error
            </span>
        </div>
    }


    @if (ViewBag.success != null)
    {
        <div class="alert alert-success alert-dismissible " style="width:50%;">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <span>
                @ViewBag.success
            </span>
        </div>
    }


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>

<script src="~/Scripts/jquery-3.4.1.js"></script>

<script>
    $(document).ready(function () {

        $('input[type=radio][name=FacultyType]').on('change', function () {
            //alert("Yes");
            switch ($(this).val()) {
                case 'Internal':
                    //alert("Internal");

                    $("#Here").val("");  //clear textbox
                    $(".Ext").hide();
                    $(".Emp").show();

                    break;
                case 'External':
                    //alert("External");

                    $("#Employee").val("");  //clear textbox
                    $("#Search").val("");
                    $("#Contact").removeAttr('readonly'); //remove readonly
                    $("#Email").removeAttr('readonly');
                    $("#Contact").val("");
                    $("#Email").val("");
                    $(".Emp").hide();
                    $(".Ext").show();
                    break;
            }
        });
    });
</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
}
@*<script src="//ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="//ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="//ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />*@
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@*<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>*@
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script type="text/javascript">

    $(function () {
        $("#Search").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/FacultyMaster/AutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#Employee").val(i.item.val);

                //$.get('FacultyMaster/Data', { id: $("#Employee").val() }, function(data) { alert("External");
                //  alert(data.Mo);
                //  alert(data.Email);


                    $(function(){

                        $.get("/FacultyMaster/Data", { id: $("#Employee").val() }, function (data) {
                            //alert("External");
                            //alert(data.Mo);
                            //alert(data.Email);
                            $("#Contact").val(data.Mo);
                            $("#Email").val(data.Email);
                            $("#Contact").attr('readonly','readonly');
                            $("#Email").attr('readonly','readonly');
                        });



               });
            },
            minLength: 1
        });
    });
</script>







