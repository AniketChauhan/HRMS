@model HRMS.Models.HRMS_Travel_Application

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>HRMS_Travel_Application</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Travel_App_Type, "Travel_App_Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Travel_App_Type, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Travel_App_Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Travel_Application_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Travel_Application_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Travel_Application_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.emp_id, "emp_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.emp_id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.emp_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Designation, "Designation", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Grade, "Grade", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Travel_Type, "Travel_Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("Travel_Type", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.EditorFor(model => model.Travel_Type, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            @Html.ValidationMessageFor(model => model.Travel_Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Travel_Purpose, "Travel_Purpose", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("Travel_Purpose", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.EditorFor(model => model.Travel_Purpose, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

            @Html.ValidationMessageFor(model => model.Travel_Purpose, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.From_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @*@Html.EditorFor(model => model.From_Date, new { htmlAttributes = new { @class = "form-control datepicker"@value =  } })*@
            <input type="text" name="@Html.NameFor(c=>c.From_Date)" class="form-control" value="@ViewBag.Fromdate" readonly = "readonly"  />

            @Html.ValidationMessageFor(model => model.From_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.To_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @*@Html.EditorFor(model => model.To_Date, new { htmlAttributes = new { @class = "form-control datepicker" } })*@
            <input type="text" name="@Html.NameFor(c=>c.To_Date)" class="form-control" value="@ViewBag.todate" readonly = "readonly"  />

            @Html.ValidationMessageFor(model => model.To_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="@Html.NameFor(c=>c.Status)">
                <option value="1">
                    Approve
                </option>
                <option value="3">
                    Cancel
                </option>

            </select>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Approved_by, "Approved_by", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Approved_by, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Approved_by, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Approved_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Approved_date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Approved_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Approval_Remark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Approval_Remark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Approval_Remark, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
