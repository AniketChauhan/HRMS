@model HRMS.Models.HRMS_Training_Request_Application

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>HRMS_Training_Request_Application</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ApplicationId)

    <div class="form-group">
        @Html.LabelFor(model => model.request_date, "Request Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.request_date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @InputType = "date" } })
            @Html.ValidationMessageFor(model => model.request_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpID, "Employee Code", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3 form-inline">
            @*@Html.DropDownList("EmpID", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })



            @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmployeeName, "Employee Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">
            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.designationID, "designation", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Designation", new SelectList(ViewBag.Designation, "Desg_Id", "Desg_Name"), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
            @*@Html.EditorFor(model => model.designationID, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.ValidationMessageFor(model => model.designationID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownList("Department", new SelectList(ViewBag.Department, "Dept_Id", "Dept_Name"), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

            @*@Html.EditorFor(model => model.HRMS_DEPT.Dept_Name, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Training_Name, "Training Subject", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Training_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Training_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TrainingDetails, "Training Details", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TrainingDetails, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TrainingDetails, "", new { @class = "text-danger" })
        </div>
    </div>

    
    <div class="form-group">
        @Html.LabelFor(model => model.Skill, "Skill", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Skill", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="@Html.NameFor(c=>c.Status)">
                <option value="1">
                    Approve
                </option>
                <option value="2">
                    Cancel
                </option>

            </select>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.ApprovedBy_ID, "ApprovedBy_ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApprovedBy_ID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ApprovedBy_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ApprovedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ApprovedDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Approved_Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Approved_Remarks, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Approved_Remarks, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
