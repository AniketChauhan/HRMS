@model HRMS.Models.HRMS_Training_Request_Application

@{
    ViewBag.Title = "Create";
}

<h2>Create Training Request</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.request_date,"Request Date" ,htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.request_date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @InputType = "date" } })
                @Html.ValidationMessageFor(model => model.request_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpID, "Employee Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3 form-inline">
                @*@Html.DropDownList("EmpID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })



                @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeName, "Employee Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.designationID, "designation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Designation", new SelectList(ViewBag.Designation, "Desg_Id", "Desg_Name"), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                @*@Html.EditorFor(model => model.designationID, new { htmlAttributes = new { @class = "form-control" } })*@

                @Html.ValidationMessageFor(model => model.designationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("Department", new SelectList(ViewBag.Department, "Dept_Id", "Dept_Name"), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                @*@Html.EditorFor(model => model.HRMS_DEPT.Dept_Name, new { htmlAttributes = new { @class = "form-control" } })*@

                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Training_Name,"Training Subject", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Training_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Training_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainingDetails, "Training Details",  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrainingDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrainingDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group Emp" style="">
            @Html.LabelFor(model => model.Skill, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10 form-inline">
                @Html.EditorFor(model => model.Skill, new { htmlAttributes = new { @class = "form-control", @id = "Employee" } })
                <label><i class=""></i>Search</label>
                <input type="text" id="Search" name="Search" class="form-control" placeholder="Search Here" />
                @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                
                    <input type="submit" value="Create" class="btn btn-primary " /><i> &emsp;</i>
                    <input type="reset" value="Cancel" class="btn btn-danger" />
                
            </div>
        </div>
    </div>
}
@if (ViewBag.RequestStatus != null)
{
    <div class="alert alert-success alert-dismissible " style="width:50%;">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <span>
            @ViewBag.RequestStatus
        </span>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script type="text/javascript">

    $(function () {
        $("#Search").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/RequestApplication/AutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#Employee").val(i.item.val);

                //$.get('FacultyMaster/Data', { id: $("#Employee").val() }, function(data) { alert("External");
                //  alert(data.Mo);
                //  alert(data.Email);



                //$(function () {

                //    $.get("/RequestApplication/Data", { id: $("#Employee").val() }, function (data) {
                //        //alert("External");
                //        //alert(data.Mo);
                //        //alert(data.Email);
                //        $("#Employee").val(data.Skill_Name);
                //        //$("#Email").val(data.Email);
                //        //$("#Contact").attr('readonly', 'readonly');
                //        //$("#Email").attr('readonly', 'readonly');
                //    });



                //});
            },
            minLength: 1
        });
    });
</script>
