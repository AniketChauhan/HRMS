@using PagedList
@using PagedList.Mvc
@model IPagedList<HRMS.Models.HRMS_Emp_Details>

@{
    ViewBag.Title = "Index";
}

@*<p>@Session["id"]</p>
    <p>@Session["id"]</p>
    @if (User.Identity.IsAuthenticated)
    {
        <p>@Session["id"]</p>
        <p>@Session["id"]</p>
        <p>@Session["id"]</p>
        <p>@Session["id"]</p>
    }*@

<h2>Employees data</h2>
<hr />
@*<p>
        @Html.ActionLink("Add New Employee", "Create")
    </p>*@


<br />
<div class="form-inline">

    @using (Html.BeginForm("Index", "EmployeeDetail", FormMethod.Get))
    {
        <table class="col-md-4 table-bordered">
            <tr>
                <td>
                    @Html.DropDownList("Data", new List<SelectListItem>
                           {
                           new SelectListItem{ Text="Employee ID", Value = "1" },
                           new SelectListItem{ Text="Employee Name", Value = "2" },
                           new SelectListItem{ Text="Unit Name", Value = "3" },

                           }, "--Select--", htmlAttributes: new { @class = "form-control" })
                    

                </td>
                <td>

                    @Html.TextBox("Search", null, new { @class= "form-control",@placeholder="Search Here"})
                </td>
                <td>

                    <input type="submit" value="Search" class="form-control btn-success" />
                </td>
            </tr>
        </table>
    }

</div>
<br>
<br>




<table class="table table-bordered table-responsive table-striped">
    <tr style="background-color:lightgray">
        <th>
            @Html.DisplayNameFor(model => model.First().EMP_ID)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().HRMS_SALUTATION.Salutation_Name)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().Display_Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().HRMS_DEPT.Dept_Name)
        </th>
        <th>
            Designation
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().UnitMaster.UnitName)
        </th>

        <th><i class="glyphicon glyphicon-wrench" style="font-size:large"> </i> Operations</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EMP_ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HRMS_SALUTATION.Salutation_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Display_Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.HRMS_DEPT.Dept_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HRMS_DESG_MS.Desg_Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.UnitMaster.UnitName)
            </td>
            <td class="btn-group-sm">
                @Html.ActionLink(" Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-primary btn-sm glyphicon glyphicon-edit" })
                @Html.ActionLink(" Details", "Details", new { id = item.ID }, new { @class = "btn btn-warning btn-sm glyphicon glyphicon-list-alt" })

                <button class="btn btn-danger  btn-sm " onclick="return removeFromList(this, '@item.ID') "> <i class="glyphicon glyphicon-trash"> </i> Delete</button>
            </td>
        </tr>
    }

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, Search = Request.QueryString["Search"], Data = Request.QueryString["Data"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })

<script>
    function removeFromList(thisobj, id) {
        if (confirm("Are you sure?") == true) {
            var data = JSON.stringify({
                'id': id
            });
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: "@Url.Action("delete","EmployeeDetail")",
                datatype: "json",
                data: data,
                success: function (response) {
                    var tr = $(thisobj).closest("tr");
                    $(tr).remove();
                }
            });
        }
    }
</script>
